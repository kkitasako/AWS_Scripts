{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Deploy ELB and AutoScaling Group for Web Servers",

  "Parameters" : {
    "WebServerPort" : {
      "Description" : "TCP/IP port of the web server",
      "Type" : "String",
      "Default" : "80"
    },
	"VpcId" : {
			"Type" : "String",
			"Description" : "VpcId of your existing Virtual Private Cloud (VPC).",
			"Default" : "vpc-8e2cc6eb"
	},
  "AZs" : {
		"Type" : "CommaDelimitedList",
		"Default" : "ap-northeast-1b,ap-northeast-1c",
		"Description" : "The list of AvailabilityZones for your Virtual Private Cloud (VPC). It needs to be consistent with the AZ of your subnets."
	},
	"Subnets" : {
			"Type" : "CommaDelimitedList",
			"Default" : "subnet-7f7f9608,subnet-d6c5c990",
			"Description" : "The list of SubnetIds where the stack will be launched"
	},
	"AMI" : {
		"Description" : "AutoScale AMI ID",
		"Type" : "String",
		"Default" : "ami-ba6a97ba"
	},
	 
	"InstanceType" : {
		"Description" : "Type of EC2 instance to launch.",
		"Type" : "String",
		"Default" : "t2.micro",
		"AllowedValues" : [ "t2.micro","t2.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.xlarge","cc2.8xlarge","cg1.4xlarge", "cr1.8xlarge","hi1.4xlarge","hs1.8xlarge"],
		"ConstraintDescription" : "must be a valid EC2 instance type."			
	},

   "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
		"MinSize" : {
			"Description" : "Minimum number of EC2 instances.",
			"Type" : "Number",
			"Default" : "0"
		},
		"DesiredSize" : {
			"Description" : "Desired number of EC2 instances.",
			"Type" : "Number",
			"Default" : "2"
		},
		"MaxSize" : {
			"Description" : "Maximum number of EC2 instances.",
			"Type" : "Number",
			"Default" : "10"
		}
	},

  "Resources" : {
		"CFASGroup": {
			"UpdatePolicy" : {
				"AutoScalingRollingUpdate" : {
					"MinInstancesInService" : "1",
					"MaxBatchSize" : "3",
					"PauseTime" : "PT15M"
				}
			},
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"AvailabilityZones" : { "Ref" : "AZs"},
				"VPCZoneIdentifier" : { "Ref" : "Subnets" },				
				"Cooldown": "300",
				"MaxSize": {"Ref" : "MaxSize"},
				"MinSize": {"Ref" : "MinSize"},
				"DesiredCapacity" : {"Ref" : "DesiredSize"},
				"LaunchConfigurationName": {"Ref": "CFASConfig"},
                "HealthCheckType" : "EC2",
                "HealthCheckGracePeriod" : "3600",
				"LoadBalancerNames": [{"Ref": "ELB"}],
				"Tags": [{"Key": "Name", "Value": {"Ref": "AWS::StackName"}, "PropagateAtLaunch" : true}]
			}
		},
	
  "CFASConfig" : {
    "Type" : "AWS::AutoScaling::LaunchConfiguration",
    "Properties" : {
      "ImageId" : { "Ref" : "AMI" },
      "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
      "InstanceType" : { "Ref" : "InstanceType" },
      "KeyName" : { "Ref" : "KeyName" }
    }
  },  
	
	"ELB" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : { "Ref" : "WebServerPort" },
          "Protocol" : "HTTP"
        } ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : [ "", ["HTTP:", { "Ref" : "WebServerPort" }, "/index.html"]]},
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "5",
          "Timeout" : "2"
        },
	   "SecurityGroups" : [{ "Ref" : "InstanceSecurityGroup" }],
	   "Subnets" : { "Ref" : "Subnets" }
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access on the inbound port for ELB",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : { "Ref" : "WebServerPort" },
          "ToPort" : { "Ref" : "WebServerPort" },
          "CidrIp" : "0.0.0.0/0"
        } ],
		"VpcId" : { "Ref" : "VpcId" }
      }
    }
  },

  "Outputs" : {
    "URL" : {
      "Description" : "URL of the sample website",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ELB", "DNSName" ]}]]}
    }
  }
}